{"ast":null,"code":"import _defineProperty from \"/Users/nicklascschmidt/Code/Nicky/threadauction/client/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"/Users/nicklascschmidt/Code/Nicky/threadauction/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/nicklascschmidt/Code/Nicky/threadauction/client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/nicklascschmidt/Code/Nicky/threadauction/client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/nicklascschmidt/Code/Nicky/threadauction/client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/nicklascschmidt/Code/Nicky/threadauction/client/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/nicklascschmidt/Code/Nicky/threadauction/client/src/pages/login/login.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\n\nvar Login =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Login, _React$Component);\n\n  function Login(props) {\n    var _this;\n\n    _classCallCheck(this, Login);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Login).call(this, props));\n\n    _this.handleChange = function (event) {\n      console.log('login handleChange');\n      var _event$target = event.target,\n          name = _event$target.name,\n          value = _event$target.value;\n\n      _this.setState(_defineProperty({}, name, value));\n    };\n\n    _this.handleSubmit = function (event) {\n      event.preventDefault();\n\n      _this.setState({\n        submitted: true\n      }, _this.sendToReduxStore);\n    };\n\n    _this.sendToReduxStore = function () {\n      var _this$state = _this.state,\n          username = _this$state.username,\n          password = _this$state.password;\n      var reduxData = {\n        username: username,\n        password: password\n      };\n      console.log('reduxData', reduxData);\n\n      if (_this.state.submitted) {\n        _this.loginAcceptedOrDenied(reduxData);\n      }\n    };\n\n    _this.loginAcceptedOrDenied = function (data) {\n      // check db for login data here\n      data.isLoggedIn = true;\n\n      _this.props.dispatch({\n        type: 'USER_LOGIN_REQUEST',\n        payload: data\n      });\n\n      _this.setState({\n        submitted: false\n      });\n    };\n\n    _this.state = {\n      user: {\n        username: '',\n        password: '',\n        submitted: false\n      }\n    };\n    return _this;\n  }\n\n  _createClass(Login, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      }, React.createElement(\"form\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"text\",\n        name: \"username\",\n        value: this.state.username,\n        onChange: function onChange(event) {\n          return _this2.handleChange(event);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      }), React.createElement(\"input\", {\n        type: \"text\",\n        name: \"password\",\n        value: this.state.password,\n        onChange: function onChange(event) {\n          return _this2.handleChange(event);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      }), React.createElement(\"button\", {\n        onClick: this.handleSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78\n        },\n        __self: this\n      }, \"submit\")), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80\n        },\n        __self: this\n      }, \"State user: \", this.state.username), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        },\n        __self: this\n      }, \"State pw: \", this.state.password), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      }, \"Global props user: \", this.props.user.username), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        },\n        __self: this\n      }, \"Global props pw: \", this.props.user.password));\n    }\n  }]);\n\n  return Login;\n}(React.Component);\n\nfunction mapStateToProps(state) {\n  console.log('Login: mapStateToProps state', state);\n  return {\n    username: state.username,\n    password: state.password,\n    isLoggedIn: true\n  };\n}\n\nexport default connect(mapStateToProps)(Login);","map":{"version":3,"sources":["/Users/nicklascschmidt/Code/Nicky/threadauction/client/src/pages/login/login.js"],"names":["React","connect","Login","props","handleChange","event","console","log","target","name","value","setState","handleSubmit","preventDefault","submitted","sendToReduxStore","state","username","password","reduxData","loginAcceptedOrDenied","data","isLoggedIn","dispatch","type","payload","user","Component","mapStateToProps"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux';\n\n\nclass Login extends React.Component {\n    constructor(props) {\n        super(props)\n\n        this.state = {\n            user: {\n                username: '',\n                password: '',\n                submitted: false\n            }\n        }\n    }\n\n    handleChange = (event) => {\n        console.log('login handleChange');\n        const { name, value } = event.target;\n        this.setState({\n            [name]: value\n        })\n    }\n\n    handleSubmit = (event) => {\n        event.preventDefault();\n\n        this.setState({\n            submitted: true\n        }, this.sendToReduxStore);\n\n    }\n\n    sendToReduxStore = () => {\n        const { username, password } = this.state;\n\n        const reduxData = {\n            username: username,\n            password: password\n        }\n        console.log('reduxData',reduxData);\n\n        if (this.state.submitted) {\n            this.loginAcceptedOrDenied(reduxData);\n        }\n    }\n\n    loginAcceptedOrDenied = (data) => {\n        // check db for login data here\n        data.isLoggedIn = true;\n\n        this.props.dispatch({\n            type: 'USER_LOGIN_REQUEST',\n            payload: data\n        });\n        this.setState({\n            submitted: false\n        });\n    }\n\n    render() {\n        return (\n            <div>\n                <form>\n                    <input\n                        type=\"text\"\n                        name=\"username\"\n                        value={this.state.username}\n                        onChange={event => this.handleChange(event)}\n                    />\n                    <input\n                        type=\"text\"\n                        name=\"password\"\n                        value={this.state.password}\n                        onChange={event => this.handleChange(event)}\n                    />\n                    <button onClick={this.handleSubmit}>submit</button>\n                </form>\n                <p>State user: {this.state.username}</p>\n                <p>State pw: {this.state.password}</p>\n                <p>Global props user: {this.props.user.username}</p>\n                <p>Global props pw: {this.props.user.password}</p>\n            </div>\n        )\n    }\n}\n\nfunction mapStateToProps(state) {\n    console.log('Login: mapStateToProps state',state);\n    return {\n      username: state.username,\n      password: state.password,\n      isLoggedIn: true\n    };\n}\n\nexport default connect(mapStateToProps)(Login);"]},"metadata":{},"sourceType":"module"}