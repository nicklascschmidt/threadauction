{"ast":null,"code":"import _toConsumableArray from \"/Users/nicklascschmidt/Code/Nicky/threadauction/client/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"/Users/nicklascschmidt/Code/Nicky/threadauction/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/nicklascschmidt/Code/Nicky/threadauction/client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/nicklascschmidt/Code/Nicky/threadauction/client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/nicklascschmidt/Code/Nicky/threadauction/client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/nicklascschmidt/Code/Nicky/threadauction/client/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/nicklascschmidt/Code/Nicky/threadauction/client/src/pages/orderHistory/orderHistory.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport axios from 'axios';\nimport ProductListingBidHistory from \"../../components/productListing/productListingBidHistory\";\nimport './orderHistory-style.css';\nimport ErrorBox from '../../components/box/errorBox'; // TODO: clean this up - too busy\n\nvar OrderHistory =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(OrderHistory, _React$Component);\n\n  function OrderHistory(props) {\n    var _this;\n\n    _classCallCheck(this, OrderHistory);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(OrderHistory).call(this, props));\n\n    _this.componentDidMount = function () {\n      _this.pullBidsFromDb(_this.state.userId);\n    };\n\n    _this.pullBidsFromDb = function (userId) {\n      axios.get(\"/api/auctionBids/\".concat(userId)).then(function (resp) {\n        if (resp.status === 200) {\n          _this.setState({\n            bidArray: resp.data\n          });\n\n          _this.getUniqueAuctionIds(resp.data);\n        }\n      });\n    };\n\n    _this.getUniqueAuctionIds = function (bidArray) {\n      var auctionIdArray = bidArray.map(function (bid) {\n        return bid.AuctionId;\n      });\n\n      var removeDupes = function removeDupes(a) {\n        return _toConsumableArray(new Set(a));\n      };\n\n      var newAuctionIdArray = removeDupes(auctionIdArray);\n\n      _this.loopAuctionsForProductInfo(newAuctionIdArray);\n    };\n\n    _this.displayBids = function () {\n      var _this$state = _this.state,\n          bidArray = _this$state.bidArray,\n          auctionArray = _this$state.auctionArray;\n      return bidArray.map(function (bid) {\n        return React.createElement(\"div\", {\n          key: bid.id,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 51\n          },\n          __self: this\n        }, _this.findAuctionWithID(bid, auctionArray));\n      });\n    };\n\n    _this.loopAuctionsForProductInfo = function (auctionIdArray) {\n      var bidPromises = [];\n\n      var _loop = function _loop(n) {\n        bidPromises.push(new Promise(function (resolve, reject) {\n          _this.fetchAuctionFromDb(auctionIdArray[n]).then(function (resp) {\n            resolve(resp.data);\n          }).catch(function (err) {\n            reject(err);\n          });\n        }));\n      };\n\n      for (var n = 0; n < auctionIdArray.length; n++) {\n        _loop(n);\n      }\n\n      Promise.all(bidPromises).then(function (bidPromiseData) {\n        var filteredArray = bidPromiseData.filter(function (value) {\n          return value != '';\n        });\n\n        _this.setState({\n          auctionArray: filteredArray\n        });\n      });\n    };\n\n    _this.fetchAuctionFromDb = function (auctionId) {\n      return axios.get(\"/api/auctions/\".concat(auctionId));\n    };\n\n    _this.state = {\n      userId: _this.props.userId,\n      username: _this.props.username,\n      bidArray: [],\n      // every bid the user has cast\n      auctionArray: [],\n      // array of auctions that the user has placed bids for\n      errorArray: [],\n      isError: null\n    };\n    return _this;\n  } // Pull auction bids with userId. Then get auction IDs (uniques). Then display each auction with the auctionId.\n\n\n  _createClass(OrderHistory, [{\n    key: \"findAuctionWithID\",\n    value: function findAuctionWithID(bid, auctionArray) {\n      return auctionArray.map(function (auction) {\n        if (auction.id === bid.AuctionId) {\n          return React.createElement(ProductListingBidHistory, {\n            key: auction.id,\n            auctionId: auction.id,\n            imgLink: auction.imgLink,\n            title: auction.title,\n            startingPrice: auction.startingPrice,\n            createdAt: auction.createdAt,\n            bid: bid,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 62\n            },\n            __self: this\n          });\n        }\n      });\n    } // Pull data for each auction, then map after.\n\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        className: \"container center-content margin-bottom\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105\n        },\n        __self: this\n      }, React.createElement(\"h2\", {\n        className: \"margin-header bid-history-style\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106\n        },\n        __self: this\n      }, \"My Bid History\"), this.state.bidArray.length > 0 ? React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108\n        },\n        __self: this\n      }, this.displayBids()) : React.createElement(ErrorBox, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109\n        },\n        __self: this\n      }, \"No bids to show.\"));\n    }\n  }]);\n\n  return OrderHistory;\n}(React.Component);\n\nfunction mapStateToProps(state) {\n  return {\n    username: state.username,\n    userId: state.userId,\n    isLoggedIn: true\n  };\n}\n\nexport default connect(mapStateToProps)(OrderHistory);","map":{"version":3,"sources":["/Users/nicklascschmidt/Code/Nicky/threadauction/client/src/pages/orderHistory/orderHistory.js"],"names":["React","connect","axios","ProductListingBidHistory","ErrorBox","OrderHistory","props","componentDidMount","pullBidsFromDb","state","userId","get","then","resp","status","setState","bidArray","data","getUniqueAuctionIds","auctionIdArray","map","bid","AuctionId","removeDupes","a","Set","newAuctionIdArray","loopAuctionsForProductInfo","displayBids","auctionArray","id","findAuctionWithID","bidPromises","n","push","Promise","resolve","reject","fetchAuctionFromDb","catch","err","length","all","bidPromiseData","filteredArray","filter","value","auctionId","username","errorArray","isError","auction","imgLink","title","startingPrice","createdAt","Component","mapStateToProps","isLoggedIn"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux';\nimport axios from 'axios';\nimport ProductListingBidHistory from \"../../components/productListing/productListingBidHistory\";\nimport './orderHistory-style.css';\nimport ErrorBox from '../../components/box/errorBox';\n\n// TODO: clean this up - too busy\nclass OrderHistory extends React.Component {\n  constructor(props) {\n    super(props)\n\n    this.state = {\n      userId: this.props.userId,\n      username: this.props.username,\n      bidArray: [], // every bid the user has cast\n      auctionArray: [], // array of auctions that the user has placed bids for\n      errorArray: [],\n      isError: null\n    }\n  }\n\n  // Pull auction bids with userId. Then get auction IDs (uniques). Then display each auction with the auctionId.\n  componentDidMount = () => {\n    this.pullBidsFromDb(this.state.userId);\n  }\n\n  // Pull bids (with userId), then get unique auctionIds from those bids.\n  pullBidsFromDb = (userId) => {\n    axios.get(`/api/auctionBids/${userId}`)\n      .then(resp => {\n        if (resp.status === 200) {\n          this.setState({ bidArray: resp.data });\n          this.getUniqueAuctionIds(resp.data);\n        }\n      });\n  }\n\n  // Build auctionIdArray and remove dupes. Then loop auctions\n  getUniqueAuctionIds = (bidArray) => {\n    let auctionIdArray = bidArray.map((bid) => bid.AuctionId)\n    const removeDupes = (a) => [...new Set(a)];\n    let newAuctionIdArray = removeDupes(auctionIdArray);\n    this.loopAuctionsForProductInfo(newAuctionIdArray);\n  }\n\n  displayBids = () => {\n    let { bidArray, auctionArray } = this.state;\n    return bidArray.map((bid) => {\n      return (\n        <div key={bid.id}>\n          {this.findAuctionWithID(bid, auctionArray)}\n        </div>\n      )\n    })\n  }\n\n  findAuctionWithID(bid, auctionArray) {\n    return auctionArray.map((auction) => {\n      if (auction.id === bid.AuctionId) {\n        return (\n          <ProductListingBidHistory\n            key={auction.id}\n            auctionId={auction.id}\n            imgLink={auction.imgLink}\n            title={auction.title}\n            startingPrice={auction.startingPrice}\n            createdAt={auction.createdAt}\n            bid={bid}\n          />\n        )\n      }\n    });\n  }\n\n  // Pull data for each auction, then map after.\n  loopAuctionsForProductInfo = (auctionIdArray) => {\n    let bidPromises = [];\n    for (let n = 0; n < auctionIdArray.length; n++) {\n      bidPromises.push(new Promise((resolve, reject) => {\n        this.fetchAuctionFromDb(auctionIdArray[n])\n          .then(resp => {\n            resolve(resp.data);\n          }).catch(err => {\n            reject(err);\n          })\n      }))\n    }\n\n    Promise.all(bidPromises).then(bidPromiseData => {\n      const filteredArray = bidPromiseData.filter((value) => {\n        return value != '';\n      })\n      this.setState({ auctionArray: filteredArray });\n    });\n  }\n\n  // Returns a promise\n  fetchAuctionFromDb = (auctionId) => {\n    return axios.get(`/api/auctions/${auctionId}`)\n  }\n\n  render() {\n    return (\n      <div className='container center-content margin-bottom'>\n        <h2 className='margin-header bid-history-style'>My Bid History</h2>\n        {this.state.bidArray.length > 0\n          ? <div>{this.displayBids()}</div>\n          : <ErrorBox>No bids to show.</ErrorBox>}\n      </div>\n    )\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {\n    username: state.username,\n    userId: state.userId,\n    isLoggedIn: true\n  };\n}\n\nexport default connect(mapStateToProps)(OrderHistory);\n"]},"metadata":{},"sourceType":"module"}