{"ast":null,"code":"var _jsxFileName = \"/Users/nicklascschmidt/Code/Nicky/threadauction/client/src/index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker'; // redux\n\nimport { Provider } from 'react-redux';\nimport { createStore } from 'redux';\nimport { loadState, saveState } from './localstorage';\nvar persistedState = loadState();\nvar initialState = {\n  username: '',\n  password: '',\n  email: '',\n  address: '',\n  city: '',\n  stateUSA: '',\n  zip: '',\n  isLoggedIn: false\n};\n\nvar reducer = function reducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n  console.log('action', action);\n  console.log('state', state);\n\n  switch (action.type) {\n    case 'USER_LOGIN_REQUEST':\n      console.log('global state updated - user logged in');\n      return {\n        username: action.payload.username,\n        password: action.payload.password,\n        isLoggedIn: action.payload.isLoggedIn\n      };\n\n    case 'USER_LOGOUT_REQUEST':\n      console.log('global state updated - user logged out');\n      return {\n        username: '',\n        password: '',\n        email: '',\n        address: '',\n        city: '',\n        stateUSA: '',\n        zip: '',\n        isLoggedIn: false\n      };\n\n    case 'USER_SIGNUP_REQUEST':\n      console.log('global state updated - user logged out');\n      return {\n        username: action.payload.username,\n        password: action.payload.password,\n        email: action.payload.email,\n        address: action.payload.address,\n        city: action.payload.city,\n        stateUSA: action.payload.stateUSA,\n        zip: action.payload.zip\n      };\n\n    default:\n      return state;\n  }\n};\n\nvar store = createStore(reducer, persistedState);\nstore.subscribe(function () {\n  saveState(store.getState());\n});\nReactDOM.render(React.createElement(Provider, {\n  store: store,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 74\n  },\n  __self: this\n}, React.createElement(App, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 75\n  },\n  __self: this\n})), document.getElementById('root')); // If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\n\nserviceWorker.unregister();","map":{"version":3,"sources":["/Users/nicklascschmidt/Code/Nicky/threadauction/client/src/index.js"],"names":["React","ReactDOM","App","serviceWorker","Provider","createStore","loadState","saveState","persistedState","initialState","username","password","email","address","city","stateUSA","zip","isLoggedIn","reducer","state","action","console","log","type","payload","store","subscribe","getState","render","document","getElementById","unregister"],"mappings":"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","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\n// redux\nimport { Provider } from 'react-redux';\nimport { createStore } from 'redux';\nimport { loadState, saveState } from './localstorage';\n\nconst persistedState = loadState();\n\nconst initialState = {\n    username: '',\n    password: '',\n    email: '',\n    address: '',\n    city: '',\n    stateUSA: '',\n    zip: '',\n    isLoggedIn: false\n}\n\nconst reducer = (state = initialState, action) => {\n    console.log('action',action);\n    console.log('state',state);\n    switch(action.type) {\n      case 'USER_LOGIN_REQUEST':\n        console.log('global state updated - user logged in');\n        return {\n          username: action.payload.username,\n          password: action.payload.password,\n          isLoggedIn: action.payload.isLoggedIn\n        }\n      case 'USER_LOGOUT_REQUEST':\n        console.log('global state updated - user logged out');\n        return {\n            username: '',\n            password: '',\n            email: '',\n            address: '',\n            city: '',\n            stateUSA: '',\n            zip: '',\n            isLoggedIn: false\n        }\n      case 'USER_SIGNUP_REQUEST':\n        console.log('global state updated - user logged out');\n        return {\n            username: action.payload.username,\n            password: action.payload.password,\n            email: action.payload.email,\n            address: action.payload.address,\n            city: action.payload.city,\n            stateUSA: action.payload.stateUSA,\n            zip: action.payload.zip\n        }\n      default:\n        return state;\n    }\n}\n  \nconst store = createStore(\n    reducer,\n    persistedState\n);\n\nstore.subscribe(() => {\n    saveState(store.getState());\n})\n\n\nReactDOM.render(\n    <Provider store={store}>\n        <App />\n    </Provider>\n,\n    document.getElementById('root')\n);\n\n\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"]},"metadata":{},"sourceType":"module"}