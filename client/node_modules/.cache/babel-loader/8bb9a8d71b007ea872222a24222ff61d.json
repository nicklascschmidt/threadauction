{"ast":null,"code":"import _regeneratorRuntime from \"/Users/nicklascschmidt/Code/Nicky/threadauction/client/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/nicklascschmidt/Code/Nicky/threadauction/client/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _defineProperty from \"/Users/nicklascschmidt/Code/Nicky/threadauction/client/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"/Users/nicklascschmidt/Code/Nicky/threadauction/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/nicklascschmidt/Code/Nicky/threadauction/client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/nicklascschmidt/Code/Nicky/threadauction/client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/nicklascschmidt/Code/Nicky/threadauction/client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/nicklascschmidt/Code/Nicky/threadauction/client/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/nicklascschmidt/Code/Nicky/threadauction/client/src/pages/login/login.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport * as Styles from './login-style';\nimport { Card } from '../../components/form/form'; // input too\n\nimport { Button } from '../../components/button/buttons';\nimport axios from 'axios';\nimport './login-style';\n\nvar Login =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Login, _React$Component);\n\n  function Login(props) {\n    var _this;\n\n    _classCallCheck(this, Login);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Login).call(this, props));\n\n    _this.componentDidMount = function () {\n      _this.setState({\n        sendToRedux: false,\n        sendToReduxData: null\n      });\n    };\n\n    _this.handleChange = function (event) {\n      var _event$target = event.target,\n          name = _event$target.name,\n          value = _event$target.value;\n\n      _this.setState(_defineProperty({}, name, value));\n    };\n\n    _this.handleSubmit = function (event) {\n      event.preventDefault();\n      var _this$state = _this.state,\n          username = _this$state.username,\n          password = _this$state.password;\n      var userData = {\n        username: username,\n        password: password\n      };\n      console.log('userData', userData);\n\n      _this.setState({\n        loading: true // isError: false,\n        // errorMsg: null\n\n      });\n\n      _this.checkDbForUsernameAndPassword(userData);\n\n      console.log('userObj (should be last)', userObj);\n\n      if (userObj) {\n        console.log('no error');\n        console.log('userObj in handleSubmit', userObj); // this.sendToReduxStore(userObj);\n      } else {\n        console.log('no userObj');\n      }\n    };\n\n    _this.sendToReduxStore = function (data) {\n      _this.props.dispatch({\n        type: 'USER_LOGIN_REQUEST',\n        payload: data\n      });\n\n      _this.setState({\n        submitted: true\n      }); // this.setState({\n      //     submitted: true,\n      //     loading: false,\n      //     errorArray: [],\n      //     isError: false\n      // });\n\n    };\n\n    _this.componentDidUpdate = function () {\n      if (_this.state.sendToRedux) {}\n\n      if (_this.state.submitted) {\n        // do stuff - take user to Home page?\n        console.log('user data submitted'); // bring user to login page\n        // window.location = '/login';\n      }\n    };\n\n    _this.state = {\n      username: '',\n      password: '',\n      loading: false,\n      submitted: false,\n      errorMsg: null,\n      isError: null,\n      sendToRedux: false,\n      sendToReduxData: null\n    };\n    return _this;\n  }\n\n  _createClass(Login, [{\n    key: \"checkDbForUsernameAndPassword\",\n    value: function () {\n      var _checkDbForUsernameAndPassword = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee(data) {\n        var _this2 = this;\n\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                axios.get('/api/user/login', {\n                  params: data\n                }).then(function (resp) {\n                  console.log('resp.data', resp.data);\n\n                  if (resp.status === 200) {\n                    console.log('success');\n\n                    _this2.setState({\n                      loading: false\n                    });\n\n                    if (resp.data === null) {\n                      console.log('resp.data is null');\n\n                      _this2.setState({\n                        errorMsg: \"We couldn't find your profile. Please check your username and password and try again.\",\n                        isError: true\n                      });\n                    } else {\n                      // return an object to pass into redux\n                      _this2.setState({\n                        errorMsg: null,\n                        isError: false,\n                        sendToRedux: true,\n                        sendToReduxData: resp.data\n                      });\n\n                      return;\n                    }\n                  } else {\n                    console.log('front end /api/user/create error');\n                  }\n                }).catch(function (err) {\n                  _this2.setState({\n                    errorMsg: \"We ran into an issue trying to find your account.\",\n                    isError: true\n                  });\n\n                  console.log(err);\n                });\n\n              case 1:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      return function checkDbForUsernameAndPassword(_x) {\n        return _checkDbForUsernameAndPassword.apply(this, arguments);\n      };\n    }()\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 154\n        },\n        __self: this\n      }, React.createElement(Styles.Wrapper, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 155\n        },\n        __self: this\n      }, React.createElement(Card, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 156\n        },\n        __self: this\n      }, React.createElement(\"form\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 157\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 158\n        },\n        __self: this\n      }, \"Username: \"), React.createElement(\"input\", {\n        type: \"text\",\n        name: \"username\",\n        value: this.state.username,\n        onChange: function onChange(event) {\n          return _this3.handleChange(event);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 159\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 165\n        },\n        __self: this\n      }), React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 166\n        },\n        __self: this\n      }, \"Password: \"), React.createElement(\"input\", {\n        type: \"text\",\n        name: \"password\",\n        value: this.state.password,\n        onChange: function onChange(event) {\n          return _this3.handleChange(event);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 167\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 173\n        },\n        __self: this\n      }), React.createElement(\"button\", {\n        onClick: this.handleSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 174\n        },\n        __self: this\n      }, \"submit\"))), this.state.isError ? React.createElement(\"div\", {\n        className: \"error-box\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 178\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 178\n        },\n        __self: this\n      }, this.state.errorMsg)) : '', React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 179\n        },\n        __self: this\n      }, \"State user: \", this.state.username), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 180\n        },\n        __self: this\n      }, \"State pw: \", this.state.password), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 181\n        },\n        __self: this\n      }, \"Global props user: \", this.props.username), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 182\n        },\n        __self: this\n      }, \"Global props pw: \", this.props.password)));\n    }\n  }]);\n\n  return Login;\n}(React.Component);\n\nfunction mapStateToProps(state) {\n  console.log('Login: mapStateToProps state', state);\n  return {\n    username: state.username,\n    password: state.password,\n    isLoggedIn: true\n  };\n}\n\nexport default connect(mapStateToProps)(Login);","map":{"version":3,"sources":["/Users/nicklascschmidt/Code/Nicky/threadauction/client/src/pages/login/login.js"],"names":["React","connect","Styles","Card","Button","axios","Login","props","componentDidMount","setState","sendToRedux","sendToReduxData","handleChange","event","target","name","value","handleSubmit","preventDefault","state","username","password","userData","console","log","loading","checkDbForUsernameAndPassword","userObj","sendToReduxStore","data","dispatch","type","payload","submitted","componentDidUpdate","errorMsg","isError","get","params","then","resp","status","catch","err","Component","mapStateToProps","isLoggedIn"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux';\nimport * as Styles from './login-style';\nimport { Card } from '../../components/form/form'; // input too\nimport { Button } from '../../components/button/buttons';\nimport axios from 'axios';\nimport './login-style';\n\nclass Login extends React.Component {\n    constructor(props) {\n        super(props)\n\n        this.state = {\n            username: '',\n            password: '',\n            loading: false,\n            submitted: false,\n            errorMsg: null,\n            isError: null,\n            sendToRedux: false,\n            sendToReduxData: null\n        }\n    }\n\n    componentDidMount = () => {\n        this.setState({\n            sendToRedux: false,\n            sendToReduxData: null\n        })\n    }\n\n    handleChange = (event) => {\n        const { name, value } = event.target;\n        this.setState({\n            [name]: value\n        })\n    }\n\n    handleSubmit = (event) => {\n        event.preventDefault();\n\n        const { username, password } = this.state;\n        const userData = {\n            username: username,\n            password: password\n        }\n        console.log('userData',userData);\n\n        this.setState({\n            loading: true,\n            // isError: false,\n            // errorMsg: null\n        });\n\n        this.checkDbForUsernameAndPassword(userData);\n\n        console.log('userObj (should be last)',userObj);\n        if (userObj) {\n            console.log('no error');\n            console.log('userObj in handleSubmit',userObj);\n            // this.sendToReduxStore(userObj);\n\n        } else {\n            console.log('no userObj');\n        }\n        \n    }\n\n    sendToReduxStore = (data) => {\n        \n        this.props.dispatch({\n            type: 'USER_LOGIN_REQUEST',\n            payload: data\n        });\n        this.setState({\n            submitted: true\n        });\n\n\n        // this.setState({\n        //     submitted: true,\n        //     loading: false,\n        //     errorArray: [],\n        //     isError: false\n        // });\n    }\n\n    componentDidUpdate = () => {\n        if (this.state.sendToRedux) {\n\n        }\n\n\n        if (this.state.submitted) {\n            // do stuff - take user to Home page?\n            console.log('user data submitted');\n\n            // bring user to login page\n            // window.location = '/login';\n        }\n    }\n\n    \n\n\n    async checkDbForUsernameAndPassword (data) {\n        \n        axios.get('/api/user/login', {\n            params: data\n        })\n        .then(resp => {\n            console.log('resp.data',resp.data);\n\n            if (resp.status === 200) {\n                console.log('success');\n\n                this.setState({\n                    loading: false\n                });\n\n                if (resp.data === null) {\n                    console.log('resp.data is null');\n                    this.setState({\n                        errorMsg: `We couldn\\'t find your profile. Please check your username and password and try again.`,\n                        isError: true\n                    });\n                } else {\n                    // return an object to pass into redux\n                    this.setState({\n                        errorMsg: null,\n                        isError: false,\n                        sendToRedux: true,\n                        sendToReduxData: resp.data\n                    });\n                    return\n                }\n            } else {\n                console.log('front end /api/user/create error');\n            }\n\n        }).catch(err => {\n            this.setState({\n                errorMsg: `We ran into an issue trying to find your account.`,\n                isError: true\n            });\n            console.log(err);\n        });\n\n    }\n\n\n    render() {\n        return (\n            <div>\n                <Styles.Wrapper>\n                    <Card>\n                        <form>\n                            <label>Username: </label>\n                            <input\n                                type=\"text\"\n                                name=\"username\"\n                                value={this.state.username}\n                                onChange={event => this.handleChange(event)}\n                            />\n                            <br></br>\n                            <label>Password: </label>\n                            <input\n                                type=\"text\"\n                                name=\"password\"\n                                value={this.state.password}\n                                onChange={event => this.handleChange(event)}\n                            />\n                            <br></br>\n                            <button onClick={this.handleSubmit}>submit</button>\n                            {/* <Button onClick={this.handleSubmit}>submit</Button> */}\n                        </form>\n                    </Card>\n                    {this.state.isError ? <div className='error-box'><p>{this.state.errorMsg}</p></div> : ''}\n                    <p>State user: {this.state.username}</p>\n                    <p>State pw: {this.state.password}</p>\n                    <p>Global props user: {this.props.username}</p>\n                    <p>Global props pw: {this.props.password}</p>\n                </Styles.Wrapper>\n            </div>\n        )\n    }\n}\n\nfunction mapStateToProps(state) {\n    console.log('Login: mapStateToProps state',state);\n    return {\n      username: state.username,\n      password: state.password,\n      isLoggedIn: true\n    };\n}\n\nexport default connect(mapStateToProps)(Login);"]},"metadata":{},"sourceType":"module"}