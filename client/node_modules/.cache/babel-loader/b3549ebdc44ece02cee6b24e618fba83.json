{"ast":null,"code":"import _toConsumableArray from \"/Users/nicklascschmidt/Code/Nicky/threadauction/client/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"/Users/nicklascschmidt/Code/Nicky/threadauction/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/nicklascschmidt/Code/Nicky/threadauction/client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/nicklascschmidt/Code/Nicky/threadauction/client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/nicklascschmidt/Code/Nicky/threadauction/client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/nicklascschmidt/Code/Nicky/threadauction/client/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/nicklascschmidt/Code/Nicky/threadauction/client/src/pages/orderHistory/orderHistory.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport axios from 'axios';\nimport ProductListingBidHistory from \"../../components/productListing/productListingBidHistory\";\nimport './orderHistory-style.css';\nimport ErrorBox from '../../components/box/errorBox';\n\nvar OrderHistory =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(OrderHistory, _React$Component);\n\n  function OrderHistory(props) {\n    var _this;\n\n    _classCallCheck(this, OrderHistory);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(OrderHistory).call(this, props));\n\n    _this.componentDidMount = function () {\n      _this.pullBidsFromDb(_this.state.userId);\n    };\n\n    _this.pullBidsFromDb = function (userId) {\n      console.log('Pulling users bids from the DB with this ID: ', userId);\n      axios.get(\"/api/auctionBids/\".concat(userId)).then(function (resp) {\n        console.log('resp', resp);\n\n        _this.setState({\n          bidArray: resp.data\n        }, function () {\n          console.log('These are all the bids the user has placed: ', _this.state.bidArray);\n\n          _this.getAuctionIds(_this.state.bidArray);\n        });\n      }).catch(function (err) {\n        console.log(err);\n      });\n    };\n\n    _this.displayBids = function (bidArray, auctionArray) {\n      // console.log('displaying bids...',bidArray,auctionArray);\n      var bidArrayMapped = bidArray.map(function (bid) {\n        return React.createElement(\"div\", {\n          key: bid.id,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 64\n          },\n          __self: this\n        }, _this.findAuctionWithID(bid, auctionArray));\n      });\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      }, bidArrayMapped);\n    };\n\n    _this.state = {\n      userId: _this.props.userId,\n      username: _this.props.username,\n      bidArray: [],\n      // every bid the user has cast\n      auctionIdArray: [],\n      // auctionIds that the user has taken part in\n      auctionArray: [],\n      // array of auctions that the user has placed bids for\n      errorArray: [],\n      isError: null\n    };\n    return _this;\n  }\n\n  _createClass(OrderHistory, [{\n    key: \"getAuctionIds\",\n    value: function getAuctionIds(bidArray) {\n      var _this2 = this;\n\n      // console.log('getting auction IDs...');\n      var auctionIdArray = [];\n      bidArray.map(function (bid) {\n        auctionIdArray.push(bid.AuctionId);\n      });\n\n      var removeDupes = function removeDupes(a) {\n        return _toConsumableArray(new Set(a));\n      };\n\n      var removeDupeArray = removeDupes(auctionIdArray);\n      this.setState({\n        auctionIdArray: removeDupeArray\n      }, function () {\n        //   console.log('These are the IDs of the auctions: ',this.state.auctionIdArray);\n        _this2.loopAuctionsForProductInfo(_this2.state.auctionIdArray);\n      });\n    }\n  }, {\n    key: \"getBidStatus\",\n    value: function getBidStatus() {}\n  }, {\n    key: \"findAuctionWithID\",\n    value: function findAuctionWithID(bid, auctionArray) {\n      // console.log('looking for the auction...',auctionID,auctionArray)\n      var auctionMapped = auctionArray.map(function (auction) {\n        if (auction.id === bid.AuctionId) {\n          return React.createElement(ProductListingBidHistory, {\n            key: auction.id,\n            auctionId: auction.id,\n            imgLink: auction.imgLink,\n            title: auction.title,\n            startingPrice: auction.startingPrice,\n            createdAt: auction.createdAt,\n            bid: bid,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 81\n            },\n            __self: this\n          });\n        }\n      });\n      return auctionMapped;\n    }\n  }, {\n    key: \"loopAuctionsForProductInfo\",\n    value: function loopAuctionsForProductInfo(auctionIdArray) {\n      var _this3 = this;\n\n      // console.log('Now, we\\'re looping through the auction array and pulling data for each one. We\\'ll map it after.');\n      var bidPromises = [];\n\n      var _loop = function _loop(n) {\n        bidPromises.push(new Promise(function (resolve, reject) {\n          _this3.fetchAuctionFromDb(auctionIdArray[n]).then(function (resp) {\n            resolve(resp.data);\n          }).catch(function (err) {\n            reject(err);\n          });\n        }));\n      };\n\n      for (var n = 0; n < auctionIdArray.length; n++) {\n        _loop(n);\n      }\n\n      Promise.all(bidPromises).then(function (bidPromiseData) {\n        var filteredArray = bidPromiseData.filter(function (value) {\n          return value != '';\n        });\n\n        _this3.setState({\n          auctionArray: filteredArray\n        }, function () {// console.log(\"auctionArray has been set: \",this.state.auctionArray);\n        });\n      }).catch(function (err) {\n        console.log('an error occurred: ', err);\n      });\n    } // Returns a promise\n\n  }, {\n    key: \"fetchAuctionFromDb\",\n    value: function fetchAuctionFromDb(auctionId) {\n      var params = {\n        auctionId: auctionId\n      };\n      return axios.get('/api/auction/id', {\n        params: params\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        className: \"container center-content margin-bottom\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 136\n        },\n        __self: this\n      }, React.createElement(\"h2\", {\n        className: \"margin-header bid-history-style\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 137\n        },\n        __self: this\n      }, \"My Bid History\"), this.state.bidArray.length > 0 ? React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 139\n        },\n        __self: this\n      }, this.displayBids(this.state.bidArray, this.state.auctionArray)) : React.createElement(ErrorBox, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 139\n        },\n        __self: this\n      }, \"No bids to show.\"));\n    }\n  }]);\n\n  return OrderHistory;\n}(React.Component);\n\nfunction mapStateToProps(state) {\n  // console.log('OrderHistory: mapStateToProps state',state);\n  return {\n    username: state.username,\n    userId: state.userId,\n    isLoggedIn: true\n  };\n}\n\nexport default connect(mapStateToProps)(OrderHistory);","map":{"version":3,"sources":["/Users/nicklascschmidt/Code/Nicky/threadauction/client/src/pages/orderHistory/orderHistory.js"],"names":["React","connect","axios","ProductListingBidHistory","ErrorBox","OrderHistory","props","componentDidMount","pullBidsFromDb","state","userId","console","log","get","then","resp","setState","bidArray","data","getAuctionIds","catch","err","displayBids","auctionArray","bidArrayMapped","map","bid","id","findAuctionWithID","username","auctionIdArray","errorArray","isError","push","AuctionId","removeDupes","a","Set","removeDupeArray","loopAuctionsForProductInfo","auctionMapped","auction","imgLink","title","startingPrice","createdAt","bidPromises","n","Promise","resolve","reject","fetchAuctionFromDb","length","all","bidPromiseData","filteredArray","filter","value","auctionId","params","Component","mapStateToProps","isLoggedIn"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux';\nimport axios from 'axios';\nimport ProductListingBidHistory from \"../../components/productListing/productListingBidHistory\";\nimport './orderHistory-style.css';\nimport ErrorBox from '../../components/box/errorBox';\n\nclass OrderHistory extends React.Component {\n  constructor(props) {\n    super(props)\n\n    this.state = {\n      userId: this.props.userId,\n      username: this.props.username,\n      bidArray: [], // every bid the user has cast\n      auctionIdArray: [], // auctionIds that the user has taken part in\n      auctionArray: [], // array of auctions that the user has placed bids for\n      errorArray: [],\n      isError: null\n    }\n  }\n\n  componentDidMount = () => {\n    this.pullBidsFromDb(this.state.userId);\n  }\n\n  pullBidsFromDb = (userId) => {\n    console.log('Pulling users bids from the DB with this ID: ',userId);\n    axios.get(`/api/auctionBids/${userId}`)\n      .then(resp => {\n        console.log('resp',resp);\n        this.setState({\n          bidArray: resp.data,\n        }, () => {\n          console.log('These are all the bids the user has placed: ',this.state.bidArray);\n          this.getAuctionIds(this.state.bidArray);\n        })\n      }).catch(err => {\n        console.log(err);\n      });\n  }\n\n  getAuctionIds(bidArray) {\n    // console.log('getting auction IDs...');\n    let auctionIdArray = [];\n    bidArray.map((bid) => {\n      auctionIdArray.push(bid.AuctionId);\n    })\n    const removeDupes = (a) => [...new Set(a)];\n    const removeDupeArray = removeDupes(auctionIdArray);\n\n    this.setState({\n      auctionIdArray: removeDupeArray\n    }, () => {\n      //   console.log('These are the IDs of the auctions: ',this.state.auctionIdArray);\n      this.loopAuctionsForProductInfo(this.state.auctionIdArray);\n    })\n  }\n\n  displayBids = (bidArray, auctionArray) => {\n    // console.log('displaying bids...',bidArray,auctionArray);\n    const bidArrayMapped = bidArray.map((bid) => {\n      return (\n        <div key={bid.id}>\n          {this.findAuctionWithID(bid, auctionArray)}\n        </div>\n      )\n    })\n    return <div>{bidArrayMapped}</div>\n  }\n\n  getBidStatus() {\n\n  }\n\n  findAuctionWithID(bid, auctionArray) {\n    // console.log('looking for the auction...',auctionID,auctionArray)\n    const auctionMapped = auctionArray.map((auction) => {\n      if (auction.id === bid.AuctionId) {\n        return (\n          <ProductListingBidHistory\n            key={auction.id}\n            auctionId={auction.id}\n            imgLink={auction.imgLink}\n            title={auction.title}\n            startingPrice={auction.startingPrice}\n            createdAt={auction.createdAt}\n            bid={bid}\n          />\n        )\n      }\n    })\n    return auctionMapped\n  }\n\n  loopAuctionsForProductInfo(auctionIdArray) {\n    // console.log('Now, we\\'re looping through the auction array and pulling data for each one. We\\'ll map it after.');\n\n    const bidPromises = [];\n    for (let n = 0; n < auctionIdArray.length; n++) {\n      bidPromises.push(new Promise((resolve, reject) => {\n        this.fetchAuctionFromDb(auctionIdArray[n])\n          .then(resp => {\n            resolve(resp.data);\n          }).catch(err => {\n            reject(err);\n          })\n      }))\n    }\n\n    Promise.all(bidPromises).then(bidPromiseData => {\n      const filteredArray = bidPromiseData.filter((value) => {\n        return value != '';\n      })\n      this.setState({\n        auctionArray: filteredArray\n      }, () => {\n        // console.log(\"auctionArray has been set: \",this.state.auctionArray);\n      })\n    }).catch(err => {\n      console.log('an error occurred: ', err);\n    })\n  }\n\n  // Returns a promise\n  fetchAuctionFromDb(auctionId) {\n    const params = { auctionId };\n    return axios.get('/api/auction/id', { params })\n  }\n\n\n\n\n  render() {\n    return (\n      <div className='container center-content margin-bottom'>\n        <h2 className='margin-header bid-history-style'>My Bid History</h2>\n\n        {this.state.bidArray.length > 0 ? <div>{this.displayBids(this.state.bidArray, this.state.auctionArray)}</div> : <ErrorBox>No bids to show.</ErrorBox>}\n\n      </div>\n    )\n  }\n}\n\nfunction mapStateToProps(state) {\n  // console.log('OrderHistory: mapStateToProps state',state);\n  return {\n    username: state.username,\n    userId: state.userId,\n    isLoggedIn: true\n  };\n}\n\nexport default connect(mapStateToProps)(OrderHistory);\n"]},"metadata":{},"sourceType":"module"}