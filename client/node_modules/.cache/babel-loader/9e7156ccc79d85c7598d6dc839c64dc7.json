{"ast":null,"code":"import moment from 'moment';\n\nvar calculateCreatedAt = function calculateCreatedAt(createdAt) {\n  // console.log('calculating createdAt...');\n  var momentCreatedAt = moment(new Date(createdAt));\n  var displayCreatedAt = momentCreatedAt.format('MMMM Do YYYY, h:mm a');\n  return displayCreatedAt;\n};\n\nvar calculateTimeRemaining = function calculateTimeRemaining(createdAt) {\n  // console.log('calculating time remaining...');\n  // get end date first\n  var momentCreatedAt = moment(new Date(createdAt));\n  var endDate = momentCreatedAt.add(7, 'days');\n  var momentEndDate = moment(new Date(endDate)); // get Date.now\n\n  var momentNow = moment(new Date()); // calculate difference\n\n  var momentTimeRemaining = momentEndDate.diff(momentNow);\n  return momentTimeRemaining;\n};\n\nvar showDurationTimeRemaining = function showDurationTimeRemaining(momentTimeRemaining) {\n  // console.log('calculating duration time remaining...');\n  // turn into duration obj\n  var durationTimeRemaining = moment.duration(momentTimeRemaining);\n  var durationTimeRemainingObj = {\n    isComplete: null,\n    days: durationTimeRemaining.days(),\n    hours: durationTimeRemaining.hours(),\n    minutes: durationTimeRemaining.minutes()\n  };\n\n  if (durationTimeRemainingObj.days <= 0 && durationTimeRemainingObj.hours <= 0 && durationTimeRemainingObj.minutes <= 0) {\n    durationTimeRemainingObj.isComplete = true;\n  } else {\n    durationTimeRemainingObj.isComplete = false;\n  }\n\n  return durationTimeRemainingObj;\n};\n\nexport { calculateCreatedAt, calculateTimeRemaining, showDurationTimeRemaining };","map":{"version":3,"sources":["/Users/nicklascschmidt/Code/Nicky/threadauction/client/src/components/timeConverter/timeConverter.js"],"names":["moment","calculateCreatedAt","createdAt","momentCreatedAt","Date","displayCreatedAt","format","calculateTimeRemaining","endDate","add","momentEndDate","momentNow","momentTimeRemaining","diff","showDurationTimeRemaining","durationTimeRemaining","duration","durationTimeRemainingObj","isComplete","days","hours","minutes"],"mappings":"AAAA,OAAOA,MAAP,MAAmB,QAAnB;;AAGA,IAAMC,kBAAkB,GAAG,SAArBA,kBAAqB,CAACC,SAAD,EAAe;AACxC;AAEA,MAAIC,eAAe,GAAGH,MAAM,CAAC,IAAII,IAAJ,CAASF,SAAT,CAAD,CAA5B;AACA,MAAIG,gBAAgB,GAAGF,eAAe,CAACG,MAAhB,CAAuB,sBAAvB,CAAvB;AAEA,SAAOD,gBAAP;AACD,CAPD;;AASA,IAAME,sBAAsB,GAAG,SAAzBA,sBAAyB,CAACL,SAAD,EAAe;AAC5C;AAEA;AACA,MAAIC,eAAe,GAAGH,MAAM,CAAC,IAAII,IAAJ,CAASF,SAAT,CAAD,CAA5B;AACA,MAAIM,OAAO,GAAGL,eAAe,CAACM,GAAhB,CAAoB,CAApB,EAAsB,MAAtB,CAAd;AACA,MAAIC,aAAa,GAAGV,MAAM,CAAC,IAAII,IAAJ,CAASI,OAAT,CAAD,CAA1B,CAN4C,CAQ5C;;AACA,MAAIG,SAAS,GAAGX,MAAM,CAAC,IAAII,IAAJ,EAAD,CAAtB,CAT4C,CAW5C;;AACA,MAAIQ,mBAAmB,GAAGF,aAAa,CAACG,IAAd,CAAmBF,SAAnB,CAA1B;AAEA,SAAOC,mBAAP;AACD,CAfD;;AAiBA,IAAME,yBAAyB,GAAG,SAA5BA,yBAA4B,CAACF,mBAAD,EAAyB;AACzD;AAEA;AACA,MAAIG,qBAAqB,GAAGf,MAAM,CAACgB,QAAP,CAAgBJ,mBAAhB,CAA5B;AAEA,MAAIK,wBAAwB,GAAG;AAC7BC,IAAAA,UAAU,EAAE,IADiB;AAE7BC,IAAAA,IAAI,EAAEJ,qBAAqB,CAACI,IAAtB,EAFuB;AAG7BC,IAAAA,KAAK,EAAEL,qBAAqB,CAACK,KAAtB,EAHsB;AAI7BC,IAAAA,OAAO,EAAEN,qBAAqB,CAACM,OAAtB;AAJoB,GAA/B;;AAOA,MAAIJ,wBAAwB,CAACE,IAAzB,IAAiC,CAAjC,IAAsCF,wBAAwB,CAACG,KAAzB,IAAkC,CAAxE,IAA6EH,wBAAwB,CAACI,OAAzB,IAAoC,CAArH,EAAwH;AACtHJ,IAAAA,wBAAwB,CAACC,UAAzB,GAAsC,IAAtC;AACD,GAFD,MAEO;AACLD,IAAAA,wBAAwB,CAACC,UAAzB,GAAsC,KAAtC;AACD;;AAED,SAAOD,wBAAP;AACD,CApBD;;AAsBA,SAAShB,kBAAT,EAA6BM,sBAA7B,EAAqDO,yBAArD","sourcesContent":["import moment from 'moment';\n\n\nconst calculateCreatedAt = (createdAt) => {\n  // console.log('calculating createdAt...');\n  \n  let momentCreatedAt = moment(new Date(createdAt));\n  let displayCreatedAt = momentCreatedAt.format('MMMM Do YYYY, h:mm a');\n\n  return displayCreatedAt;\n}\n\nconst calculateTimeRemaining = (createdAt) => {\n  // console.log('calculating time remaining...');\n  \n  // get end date first\n  let momentCreatedAt = moment(new Date(createdAt));\n  let endDate = momentCreatedAt.add(7,'days');\n  let momentEndDate = moment(new Date(endDate));\n\n  // get Date.now\n  let momentNow = moment(new Date());\n  \n  // calculate difference\n  let momentTimeRemaining = momentEndDate.diff(momentNow);\n\n  return momentTimeRemaining;\n}\n\nconst showDurationTimeRemaining = (momentTimeRemaining) => {\n  // console.log('calculating duration time remaining...');\n\n  // turn into duration obj\n  let durationTimeRemaining = moment.duration(momentTimeRemaining);\n\n  let durationTimeRemainingObj = {\n    isComplete: null,\n    days: durationTimeRemaining.days(),\n    hours: durationTimeRemaining.hours(),\n    minutes: durationTimeRemaining.minutes()\n  }\n\n  if (durationTimeRemainingObj.days <= 0 && durationTimeRemainingObj.hours <= 0 && durationTimeRemainingObj.minutes <= 0) {\n    durationTimeRemainingObj.isComplete = true;\n  } else {\n    durationTimeRemainingObj.isComplete = false;\n  }\n\n  return durationTimeRemainingObj;\n}\n\nexport { calculateCreatedAt, calculateTimeRemaining, showDurationTimeRemaining };\n\n"]},"metadata":{},"sourceType":"module"}