{"ast":null,"code":"import _classCallCheck from \"/Users/nicklascschmidt/Code/Nicky/threadauction/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/nicklascschmidt/Code/Nicky/threadauction/client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/nicklascschmidt/Code/Nicky/threadauction/client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/nicklascschmidt/Code/Nicky/threadauction/client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/nicklascschmidt/Code/Nicky/threadauction/client/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/nicklascschmidt/Code/Nicky/threadauction/client/src/pages/orderHistory/orderHistory.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport PrettyProfile from './orderHistoryStyles';\nimport './orderHistory-style.css';\nimport axios from 'axios';\nimport ProductListingProfile from \"../../components/productListing/productListingProfile\";\nimport { calculateCreatedAt, calculateTimeRemaining, showDurationTimeRemaining } from '../../components/timeConverter/timeConverter';\n\nvar OrderHistory =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(OrderHistory, _React$Component);\n\n  function OrderHistory(props) {\n    var _this;\n\n    _classCallCheck(this, OrderHistory);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(OrderHistory).call(this, props));\n\n    _this.componentDidMount = function () {\n      _this.setState({\n        userId: _this.props.userId,\n        username: _this.props.username,\n        bidArray: [],\n        // every bid the user has cast\n        auctionArray: [],\n        errorArray: [],\n        isError: null\n      }, function () {\n        _this.pullBidsFromDb(_this.state.userId);\n      });\n    };\n\n    _this.pullBidsFromDb = function (userId) {\n      console.log('Pulling users bids from the DB with this ID: ', userId);\n      var params = {\n        userId: userId\n      };\n      axios.get('/api/bid/auctionBids', {\n        params: params\n      }).then(function (resp) {\n        console.log('These are all user bids: ', resp.data);\n\n        _this.setState({\n          bidArray: resp.data\n        }, function () {\n          _this.getAuctionIds(_this.state.bidArray);\n        });\n      }).catch(function (err) {\n        console.log(err);\n      });\n    };\n\n    _this.pullAuctionFromDb = function (auctionId) {\n      console.log('pullAuctionFromDb with this auctionId: ', auctionId);\n      var params = {\n        auctionId: auctionId\n      };\n      axios.get('/api/auction/id', {\n        params: params\n      }).then(function (resp) {// resolve(resp.data);\n      }).catch(function (err) {\n        console.log(err);\n      });\n    };\n\n    _this.displayBids = function (bidArray) {\n      // console.log('displaying bids...',bidArray);\n      var bidArrayMapped = bidArray.map(function (bid) {\n        // console.log('bid',bid);\n        return React.createElement(\"div\", {\n          key: bid.id,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 90\n          },\n          __self: this\n        }, React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 91\n          },\n          __self: this\n        }, \"Bid Amount: $\", bid.bidAmount), React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 92\n          },\n          __self: this\n        }, \"Bid Submitted At: \", calculateCreatedAt(bid.bidSubmitTime)), React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 94\n          },\n          __self: this\n        }, \"Auction ID: \", bid.AuctionId));\n      });\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98\n        },\n        __self: this\n      }, bidArrayMapped);\n    };\n\n    _this.state = {\n      userId: '',\n      username: '',\n      bidArray: [],\n      auctionIdArray: [],\n      auctionArray: [],\n      errorArray: [],\n      isError: null\n    };\n    return _this;\n  }\n\n  _createClass(OrderHistory, [{\n    key: \"getAuctionIds\",\n    value: function getAuctionIds(bidArray) {\n      var _this2 = this;\n\n      console.log('getting auction IDs...');\n      var auctionIdArray = [];\n      bidArray.map(function (auction) {\n        auctionIdArray.push(auction.id);\n      });\n      this.setState({\n        auctionIdArray: auctionIdArray\n      }, function () {\n        console.log('These are the IDs of the auctions: ', _this2.state.auctionIdArray); //   this.loopAuctionsForHighestBid(this.state.completedAuctionIdArray);\n      });\n    }\n  }, {\n    key: \"loopAuctionsForHighestBid\",\n    value: function loopAuctionsForHighestBid(completedAuctionIdArray) {\n      var _this3 = this;\n\n      console.log('Now, we\\'re looping through the auction array and pulling highest bids for each one');\n      var bidPromises = [];\n\n      var _loop = function _loop(n) {\n        bidPromises.push(new Promise(function (resolve, reject) {\n          _this3.fetchHighestBidFromDb(completedAuctionIdArray[n]).then(function (resp) {\n            resolve(resp.data);\n          }).catch(function (err) {\n            reject(err);\n          });\n        }));\n      };\n\n      for (var n = 0; n < completedAuctionIdArray.length; n++) {\n        _loop(n);\n      }\n\n      Promise.all(bidPromises).then(function (bidPromiseData) {\n        var filteredArray = bidPromiseData.filter(function (value) {\n          return value != '';\n        });\n\n        _this3.setState({\n          winningBidsArray: filteredArray\n        }, function () {\n          console.log(\"winningBidsArray has been set\");\n\n          _this3.findUserAuctionWins(_this3.state.winningBidsArray);\n        });\n      }).catch(function (err) {\n        console.log('an error occurred: ', err);\n      });\n    } // Returns a promise\n\n  }, {\n    key: \"fetchHighestBidFromDb\",\n    value: function fetchHighestBidFromDb(auctionId) {\n      var auctionData = {\n        auctionId: auctionId\n      };\n      return axios.get('/api/bid/completedAuctionHighestBid', {\n        params: auctionData\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(PrettyProfile, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 144\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 145\n        },\n        __self: this\n      }, React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 146\n        },\n        __self: this\n      }, \"My Order History\"), this.state.bidArray.length > 0 ? React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 148\n        },\n        __self: this\n      }, this.displayBids(this.state.bidArray)) : React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 148\n        },\n        __self: this\n      }, \"No bids to show.\")));\n    }\n  }]);\n\n  return OrderHistory;\n}(React.Component);\n\nfunction mapStateToProps(state) {\n  console.log('OrderHistory: mapStateToProps state', state);\n  return {\n    username: state.username,\n    userId: state.userId,\n    isLoggedIn: true\n  };\n}\n\nexport default connect(mapStateToProps)(OrderHistory);","map":{"version":3,"sources":["/Users/nicklascschmidt/Code/Nicky/threadauction/client/src/pages/orderHistory/orderHistory.js"],"names":["React","connect","PrettyProfile","axios","ProductListingProfile","calculateCreatedAt","calculateTimeRemaining","showDurationTimeRemaining","OrderHistory","props","componentDidMount","setState","userId","username","bidArray","auctionArray","errorArray","isError","pullBidsFromDb","state","console","log","params","get","then","resp","data","getAuctionIds","catch","err","pullAuctionFromDb","auctionId","displayBids","bidArrayMapped","map","bid","id","bidAmount","bidSubmitTime","AuctionId","auctionIdArray","auction","push","completedAuctionIdArray","bidPromises","n","Promise","resolve","reject","fetchHighestBidFromDb","length","all","bidPromiseData","filteredArray","filter","value","winningBidsArray","findUserAuctionWins","auctionData","Component","mapStateToProps","isLoggedIn"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,aAAP,MAA0B,sBAA1B;AACA,OAAO,0BAAP;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,qBAAP,MAAkC,uDAAlC;AACA,SAASC,kBAAT,EAA6BC,sBAA7B,EAAqDC,yBAArD,QAAsF,8CAAtF;;IAEMC,Y;;;;;AACF,wBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACf,sFAAMA,KAAN;;AADe,UAenBC,iBAfmB,GAeC,YAAM;AACtB,YAAKC,QAAL,CAAc;AACVC,QAAAA,MAAM,EAAE,MAAKH,KAAL,CAAWG,MADT;AAEVC,QAAAA,QAAQ,EAAE,MAAKJ,KAAL,CAAWI,QAFX;AAGVC,QAAAA,QAAQ,EAAE,EAHA;AAGI;AACdC,QAAAA,YAAY,EAAE,EAJJ;AAMVC,QAAAA,UAAU,EAAE,EANF;AAOVC,QAAAA,OAAO,EAAE;AAPC,OAAd,EAQG,YAAM;AACL,cAAKC,cAAL,CAAoB,MAAKC,KAAL,CAAWP,MAA/B;AACH,OAVD;AAWH,KA3BkB;;AAAA,UA8BnBM,cA9BmB,GA8BF,UAACN,MAAD,EAAY;AACzBQ,MAAAA,OAAO,CAACC,GAAR,CAAY,+CAAZ,EAA4DT,MAA5D;AACA,UAAMU,MAAM,GAAG;AAAEV,QAAAA,MAAM,EAANA;AAAF,OAAf;AACAT,MAAAA,KAAK,CAACoB,GAAN,CAAU,sBAAV,EAAkC;AAAED,QAAAA,MAAM,EAANA;AAAF,OAAlC,EACCE,IADD,CACM,UAAAC,IAAI,EAAI;AACVL,QAAAA,OAAO,CAACC,GAAR,CAAY,2BAAZ,EAAwCI,IAAI,CAACC,IAA7C;;AACA,cAAKf,QAAL,CAAc;AACVG,UAAAA,QAAQ,EAAEW,IAAI,CAACC;AADL,SAAd,EAEG,YAAM;AACL,gBAAKC,aAAL,CAAmB,MAAKR,KAAL,CAAWL,QAA9B;AACH,SAJD;AAKH,OARD,EAQGc,KARH,CAQS,UAAAC,GAAG,EAAI;AACZT,QAAAA,OAAO,CAACC,GAAR,CAAYQ,GAAZ;AACH,OAVD;AAWH,KA5CkB;;AAAA,UA8DnBC,iBA9DmB,GA8DC,UAACC,SAAD,EAAe;AAC/BX,MAAAA,OAAO,CAACC,GAAR,CAAY,yCAAZ,EAAsDU,SAAtD;AACA,UAAIT,MAAM,GAAG;AAAES,QAAAA,SAAS,EAATA;AAAF,OAAb;AACA5B,MAAAA,KAAK,CAACoB,GAAN,CAAU,iBAAV,EAA6B;AAAED,QAAAA,MAAM,EAANA;AAAF,OAA7B,EACCE,IADD,CACM,UAAAC,IAAI,EAAI,CACV;AACH,OAHD,EAGGG,KAHH,CAGS,UAAAC,GAAG,EAAI;AACZT,QAAAA,OAAO,CAACC,GAAR,CAAYQ,GAAZ;AACH,OALD;AAMH,KAvEkB;;AAAA,UA0EnBG,WA1EmB,GA0EL,UAAClB,QAAD,EAAc;AACxB;AAEA,UAAMmB,cAAc,GAAGnB,QAAQ,CAACoB,GAAT,CAAc,UAACC,GAAD,EAAS;AAC1C;AACA,eACI;AAAK,UAAA,GAAG,EAAEA,GAAG,CAACC,EAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BAAiBD,GAAG,CAACE,SAArB,CADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iCAAsBhC,kBAAkB,CAAC8B,GAAG,CAACG,aAAL,CAAxC,CAFJ,EAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BAAgBH,GAAG,CAACI,SAApB,CAJJ,CADJ;AAQH,OAVsB,CAAvB;AAWA,aAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAMN,cAAN,CAAP;AACH,KAzFkB;;AAGf,UAAKd,KAAL,GAAa;AACTP,MAAAA,MAAM,EAAE,EADC;AAETC,MAAAA,QAAQ,EAAE,EAFD;AAGTC,MAAAA,QAAQ,EAAE,EAHD;AAIT0B,MAAAA,cAAc,EAAE,EAJP;AAKTzB,MAAAA,YAAY,EAAE,EALL;AAOTC,MAAAA,UAAU,EAAE,EAPH;AAQTC,MAAAA,OAAO,EAAE;AARA,KAAb;AAHe;AAalB;;;;kCAiCaH,Q,EAAU;AAAA;;AACpBM,MAAAA,OAAO,CAACC,GAAR,CAAY,wBAAZ;AACA,UAAImB,cAAc,GAAG,EAArB;AAEA1B,MAAAA,QAAQ,CAACoB,GAAT,CAAc,UAACO,OAAD,EAAa;AACvBD,QAAAA,cAAc,CAACE,IAAf,CAAoBD,OAAO,CAACL,EAA5B;AACH,OAFD;AAIA,WAAKzB,QAAL,CAAc;AACV6B,QAAAA,cAAc,EAAEA;AADN,OAAd,EAEG,YAAM;AACPpB,QAAAA,OAAO,CAACC,GAAR,CAAY,qCAAZ,EAAkD,MAAI,CAACF,KAAL,CAAWqB,cAA7D,EADO,CAET;AACC,OALD;AAMH;;;8CA+ByBG,uB,EAAyB;AAAA;;AAC/CvB,MAAAA,OAAO,CAACC,GAAR,CAAY,qFAAZ;AAEA,UAAMuB,WAAW,GAAG,EAApB;;AAH+C,iCAItCC,CAJsC;AAK7CD,QAAAA,WAAW,CAACF,IAAZ,CAAiB,IAAII,OAAJ,CAAa,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACjD,UAAA,MAAI,CAACC,qBAAL,CAA2BN,uBAAuB,CAACE,CAAD,CAAlD,EACGrB,IADH,CACQ,UAAAC,IAAI,EAAI;AACZsB,YAAAA,OAAO,CAACtB,IAAI,CAACC,IAAN,CAAP;AACD,WAHH,EAGKE,KAHL,CAGW,UAAAC,GAAG,EAAI;AACdmB,YAAAA,MAAM,CAACnB,GAAD,CAAN;AACD,WALH;AAMD,SAPgB,CAAjB;AAL6C;;AAI/C,WAAK,IAAIgB,CAAC,GAAC,CAAX,EAAcA,CAAC,GAACF,uBAAuB,CAACO,MAAxC,EAAgDL,CAAC,EAAjD,EAAqD;AAAA,cAA5CA,CAA4C;AASpD;;AAEDC,MAAAA,OAAO,CAACK,GAAR,CAAYP,WAAZ,EAAyBpB,IAAzB,CAA8B,UAAA4B,cAAc,EAAI;AAC9C,YAAMC,aAAa,GAAGD,cAAc,CAACE,MAAf,CAAuB,UAACC,KAAD,EAAW;AACtD,iBAAOA,KAAK,IAAI,EAAhB;AACD,SAFqB,CAAtB;;AAGA,QAAA,MAAI,CAAC5C,QAAL,CAAc;AACZ6C,UAAAA,gBAAgB,EAAEH;AADN,SAAd,EAEG,YAAM;AACPjC,UAAAA,OAAO,CAACC,GAAR,CAAY,+BAAZ;;AACA,UAAA,MAAI,CAACoC,mBAAL,CAAyB,MAAI,CAACtC,KAAL,CAAWqC,gBAApC;AACD,SALD;AAMD,OAVD,EAUG5B,KAVH,CAUS,UAAAC,GAAG,EAAI;AACdT,QAAAA,OAAO,CAACC,GAAR,CAAY,qBAAZ,EAAkCQ,GAAlC;AACD,OAZD;AAaD,K,CAED;;;;0CACsBE,S,EAAW;AAC/B,UAAM2B,WAAW,GAAG;AAClB3B,QAAAA,SAAS,EAATA;AADkB,OAApB;AAGA,aAAO5B,KAAK,CAACoB,GAAN,CAAU,qCAAV,EAAiD;AACtDD,QAAAA,MAAM,EAAEoC;AAD8C,OAAjD,CAAP;AAGD;;;6BAGM;AACL,aACI,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BADJ,EAGK,KAAKvC,KAAL,CAAWL,QAAX,CAAoBoC,MAApB,GAA6B,CAA7B,GAAiC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAM,KAAKlB,WAAL,CAAiB,KAAKb,KAAL,CAAWL,QAA5B,CAAN,CAAjC,GAAsF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BAH3F,CADJ,CADJ;AAUH;;;;EAhJsBd,KAAK,CAAC2D,S;;AAmJjC,SAASC,eAAT,CAAyBzC,KAAzB,EAAgC;AAC5BC,EAAAA,OAAO,CAACC,GAAR,CAAY,qCAAZ,EAAkDF,KAAlD;AACA,SAAO;AACLN,IAAAA,QAAQ,EAAEM,KAAK,CAACN,QADX;AAELD,IAAAA,MAAM,EAAEO,KAAK,CAACP,MAFT;AAGLiD,IAAAA,UAAU,EAAE;AAHP,GAAP;AAKH;;AAED,eAAe5D,OAAO,CAAC2D,eAAD,CAAP,CAAyBpD,YAAzB,CAAf","sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux';\nimport PrettyProfile from './orderHistoryStyles';\nimport './orderHistory-style.css';\nimport axios from 'axios';\nimport ProductListingProfile from \"../../components/productListing/productListingProfile\";\nimport { calculateCreatedAt, calculateTimeRemaining, showDurationTimeRemaining } from '../../components/timeConverter/timeConverter';\n\nclass OrderHistory extends React.Component {\n    constructor(props) {\n        super(props)\n\n        this.state = {\n            userId: '',\n            username: '',\n            bidArray: [],\n            auctionIdArray: [],\n            auctionArray: [],\n\n            errorArray: [],\n            isError: null\n        }\n    }\n\n    componentDidMount = () => {\n        this.setState({\n            userId: this.props.userId,\n            username: this.props.username,\n            bidArray: [], // every bid the user has cast\n            auctionArray: [],\n\n            errorArray: [],\n            isError: null\n        }, () => {\n            this.pullBidsFromDb(this.state.userId);\n        })\n    }\n\n    \n    pullBidsFromDb = (userId) => {\n        console.log('Pulling users bids from the DB with this ID: ',userId);\n        const params = { userId };\n        axios.get('/api/bid/auctionBids', { params })\n        .then(resp => {\n            console.log('These are all user bids: ',resp.data);\n            this.setState({\n                bidArray: resp.data,\n            }, () => {\n                this.getAuctionIds(this.state.bidArray);\n            })\n        }).catch(err => {\n            console.log(err);\n        });\n    }\n\n    getAuctionIds(bidArray) {\n        console.log('getting auction IDs...');\n        let auctionIdArray = [];\n    \n        bidArray.map( (auction) => {\n            auctionIdArray.push(auction.id);\n        })\n    \n        this.setState({\n            auctionIdArray: auctionIdArray\n        }, () => {\n          console.log('These are the IDs of the auctions: ',this.state.auctionIdArray);\n        //   this.loopAuctionsForHighestBid(this.state.completedAuctionIdArray);\n        })\n    }\n\n    pullAuctionFromDb = (auctionId) => {\n        console.log('pullAuctionFromDb with this auctionId: ',auctionId);\n        let params = { auctionId };\n        axios.get('/api/auction/id', { params })\n        .then(resp => {\n            // resolve(resp.data);\n        }).catch(err => {\n            console.log(err);\n        });\n    }\n    \n\n    displayBids = (bidArray) => {\n        // console.log('displaying bids...',bidArray);\n\n        const bidArrayMapped = bidArray.map( (bid) => {\n            // console.log('bid',bid);\n            return (\n                <div key={bid.id}>\n                    <p>Bid Amount: ${bid.bidAmount}</p>\n                    <p>Bid Submitted At: {calculateCreatedAt(bid.bidSubmitTime)}</p>\n                    {/* {this.pullAuctionFromDb(bid.AuctionId)} */}\n                    <p>Auction ID: {bid.AuctionId}</p>\n                </div>\n            )\n        })\n        return <div>{bidArrayMapped}</div>\n    }\n\n    loopAuctionsForHighestBid(completedAuctionIdArray) {\n        console.log('Now, we\\'re looping through the auction array and pulling highest bids for each one');\n    \n        const bidPromises = [];\n        for (let n=0; n<completedAuctionIdArray.length; n++) {\n          bidPromises.push(new Promise( (resolve, reject) => {\n            this.fetchHighestBidFromDb(completedAuctionIdArray[n])\n              .then(resp => {\n                resolve(resp.data);\n              }).catch(err => {\n                reject(err);\n              })\n          }))\n        }\n    \n        Promise.all(bidPromises).then(bidPromiseData => {\n          const filteredArray = bidPromiseData.filter( (value) => {\n            return value != '';\n          })\n          this.setState({\n            winningBidsArray: filteredArray\n          }, () => {\n            console.log(\"winningBidsArray has been set\")\n            this.findUserAuctionWins(this.state.winningBidsArray);\n          })\n        }).catch(err => {\n          console.log('an error occurred: ',err);\n        })\n      }\n    \n      // Returns a promise\n      fetchHighestBidFromDb(auctionId) {\n        const auctionData = {\n          auctionId\n        };\n        return axios.get('/api/bid/completedAuctionHighestBid', {\n          params: auctionData\n        })\n      }\n    \n    \n    render() {\n        return(\n            <PrettyProfile>\n                <div>\n                    <h2>My Order History</h2>\n                    \n                    {this.state.bidArray.length > 0 ? <div>{this.displayBids(this.state.bidArray)}</div> : <p>No bids to show.</p>}\n\n                </div>\n            </PrettyProfile>\n        )\n    }\n}\n\nfunction mapStateToProps(state) {\n    console.log('OrderHistory: mapStateToProps state',state);\n    return {\n      username: state.username,\n      userId: state.userId,\n      isLoggedIn: true\n    };\n}\n\nexport default connect(mapStateToProps)(OrderHistory);\n"]},"metadata":{},"sourceType":"module"}