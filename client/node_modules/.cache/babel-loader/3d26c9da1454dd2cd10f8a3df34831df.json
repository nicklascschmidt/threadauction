{"ast":null,"code":"import _defineProperty from \"/Users/nicklascschmidt/Code/Nicky/threadauction/client/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"/Users/nicklascschmidt/Code/Nicky/threadauction/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/nicklascschmidt/Code/Nicky/threadauction/client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/nicklascschmidt/Code/Nicky/threadauction/client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/nicklascschmidt/Code/Nicky/threadauction/client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/nicklascschmidt/Code/Nicky/threadauction/client/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/nicklascschmidt/Code/Nicky/threadauction/client/src/pages/login/login.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport * as Styles from './login-style';\nimport { Card, Input } from '../../components/form/form';\n\nvar Login =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Login, _React$Component);\n\n  function Login(props) {\n    var _this;\n\n    _classCallCheck(this, Login);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Login).call(this, props));\n\n    _this.handleChange = function (event) {\n      console.log('login handleChange');\n      var _event$target = event.target,\n          name = _event$target.name,\n          value = _event$target.value;\n\n      _this.setState(_defineProperty({}, name, value));\n    };\n\n    _this.handleSubmit = function (event) {\n      event.preventDefault();\n\n      _this.setState({\n        submitted: true\n      }, _this.sendToReduxStore);\n    };\n\n    _this.sendToReduxStore = function () {\n      var _this$state = _this.state,\n          username = _this$state.username,\n          password = _this$state.password;\n      var reduxData = {\n        username: username,\n        password: password\n      };\n      console.log('reduxData', reduxData);\n\n      if (_this.state.submitted) {\n        _this.loginAcceptedOrDenied(reduxData);\n      }\n    };\n\n    _this.loginAcceptedOrDenied = function (data) {\n      // check db for login data here\n      data.isLoggedIn = true;\n\n      _this.props.dispatch({\n        type: 'USER_LOGIN_REQUEST',\n        payload: data\n      });\n\n      _this.setState({\n        submitted: false\n      });\n    };\n\n    _this.state = {\n      username: '',\n      password: '',\n      submitted: false\n    };\n    return _this;\n  }\n\n  _createClass(Login, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      }, React.createElement(Styles.Wrapper, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }, React.createElement(Card, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      }, React.createElement(\"form\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        for: \"male\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      }, \"Username: \"), React.createElement(Input, {\n        type: \"text\",\n        name: \"username\",\n        value: this.state.username,\n        onChange: function onChange(event) {\n          return _this2.handleChange(event);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      }), React.createElement(Input, {\n        type: \"text\",\n        name: \"password\",\n        value: this.state.password,\n        onChange: function onChange(event) {\n          return _this2.handleChange(event);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      }), React.createElement(\"button\", {\n        onClick: this.handleSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        },\n        __self: this\n      }, \"submit\"))), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86\n        },\n        __self: this\n      }, \"State user: \", this.state.username), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87\n        },\n        __self: this\n      }, \"State pw: \", this.state.password), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88\n        },\n        __self: this\n      }, \"Global props user: \", this.props.username), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89\n        },\n        __self: this\n      }, \"Global props pw: \", this.props.password)));\n    }\n  }]);\n\n  return Login;\n}(React.Component);\n\nfunction mapStateToProps(state) {\n  console.log('Login: mapStateToProps state', state);\n  return {\n    username: state.username,\n    password: state.password,\n    isLoggedIn: true\n  };\n}\n\nexport default connect(mapStateToProps)(Login);","map":{"version":3,"sources":["/Users/nicklascschmidt/Code/Nicky/threadauction/client/src/pages/login/login.js"],"names":["React","connect","Styles","Card","Input","Login","props","handleChange","event","console","log","target","name","value","setState","handleSubmit","preventDefault","submitted","sendToReduxStore","state","username","password","reduxData","loginAcceptedOrDenied","data","isLoggedIn","dispatch","type","payload","Component","mapStateToProps"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAO,KAAKC,MAAZ,MAAwB,eAAxB;AACA,SAASC,IAAT,EAAeC,KAAf,QAA4B,4BAA5B;;IAGMC,K;;;;;AACF,iBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACf,+EAAMA,KAAN;;AADe,UAUnBC,YAVmB,GAUJ,UAACC,KAAD,EAAW;AACtBC,MAAAA,OAAO,CAACC,GAAR,CAAY,oBAAZ;AADsB,0BAEEF,KAAK,CAACG,MAFR;AAAA,UAEdC,IAFc,iBAEdA,IAFc;AAAA,UAERC,KAFQ,iBAERA,KAFQ;;AAGtB,YAAKC,QAAL,qBACKF,IADL,EACYC,KADZ;AAGH,KAhBkB;;AAAA,UAkBnBE,YAlBmB,GAkBJ,UAACP,KAAD,EAAW;AACtBA,MAAAA,KAAK,CAACQ,cAAN;;AAEA,YAAKF,QAAL,CAAc;AACVG,QAAAA,SAAS,EAAE;AADD,OAAd,EAEG,MAAKC,gBAFR;AAIH,KAzBkB;;AAAA,UA2BnBA,gBA3BmB,GA2BA,YAAM;AAAA,wBACU,MAAKC,KADf;AAAA,UACbC,QADa,eACbA,QADa;AAAA,UACHC,QADG,eACHA,QADG;AAGrB,UAAMC,SAAS,GAAG;AACdF,QAAAA,QAAQ,EAAEA,QADI;AAEdC,QAAAA,QAAQ,EAAEA;AAFI,OAAlB;AAIAZ,MAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ,EAAwBY,SAAxB;;AAEA,UAAI,MAAKH,KAAL,CAAWF,SAAf,EAA0B;AACtB,cAAKM,qBAAL,CAA2BD,SAA3B;AACH;AACJ,KAvCkB;;AAAA,UAyCnBC,qBAzCmB,GAyCK,UAACC,IAAD,EAAU;AAC9B;AACAA,MAAAA,IAAI,CAACC,UAAL,GAAkB,IAAlB;;AAEA,YAAKnB,KAAL,CAAWoB,QAAX,CAAoB;AAChBC,QAAAA,IAAI,EAAE,oBADU;AAEhBC,QAAAA,OAAO,EAAEJ;AAFO,OAApB;;AAIA,YAAKV,QAAL,CAAc;AACVG,QAAAA,SAAS,EAAE;AADD,OAAd;AAGH,KApDkB;;AAGf,UAAKE,KAAL,GAAa;AACTC,MAAAA,QAAQ,EAAE,EADD;AAETC,MAAAA,QAAQ,EAAE,EAFD;AAGTJ,MAAAA,SAAS,EAAE;AAHF,KAAb;AAHe;AAQlB;;;;6BA8CQ;AAAA;;AACL,aACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,MAAD,CAAQ,OAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAO,QAAA,GAAG,EAAC,MAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADJ,EAEI,oBAAC,KAAD;AACI,QAAA,IAAI,EAAC,MADT;AAEI,QAAA,IAAI,EAAC,UAFT;AAGI,QAAA,KAAK,EAAE,KAAKE,KAAL,CAAWC,QAHtB;AAII,QAAA,QAAQ,EAAE,kBAAAZ,KAAK;AAAA,iBAAI,MAAI,CAACD,YAAL,CAAkBC,KAAlB,CAAJ;AAAA,SAJnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFJ,EAQI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QARJ,EASI,oBAAC,KAAD;AACI,QAAA,IAAI,EAAC,MADT;AAEI,QAAA,IAAI,EAAC,UAFT;AAGI,QAAA,KAAK,EAAE,KAAKW,KAAL,CAAWE,QAHtB;AAII,QAAA,QAAQ,EAAE,kBAAAb,KAAK;AAAA,iBAAI,MAAI,CAACD,YAAL,CAAkBC,KAAlB,CAAJ;AAAA,SAJnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QATJ,EAeI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAfJ,EAgBI;AAAQ,QAAA,OAAO,EAAE,KAAKO,YAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAhBJ,CADJ,CADJ,EAqBI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBAAgB,KAAKI,KAAL,CAAWC,QAA3B,CArBJ,EAsBI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAAc,KAAKD,KAAL,CAAWE,QAAzB,CAtBJ,EAuBI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gCAAuB,KAAKf,KAAL,CAAWc,QAAlC,CAvBJ,EAwBI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BAAqB,KAAKd,KAAL,CAAWe,QAAhC,CAxBJ,CADJ,CADJ;AA8BH;;;;EAtFerB,KAAK,CAAC6B,S;;AAyF1B,SAASC,eAAT,CAAyBX,KAAzB,EAAgC;AAC5BV,EAAAA,OAAO,CAACC,GAAR,CAAY,8BAAZ,EAA2CS,KAA3C;AACA,SAAO;AACLC,IAAAA,QAAQ,EAAED,KAAK,CAACC,QADX;AAELC,IAAAA,QAAQ,EAAEF,KAAK,CAACE,QAFX;AAGLI,IAAAA,UAAU,EAAE;AAHP,GAAP;AAKH;;AAED,eAAexB,OAAO,CAAC6B,eAAD,CAAP,CAAyBzB,KAAzB,CAAf","sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux';\nimport * as Styles from './login-style';\nimport { Card, Input } from '../../components/form/form';\n\n\nclass Login extends React.Component {\n    constructor(props) {\n        super(props)\n\n        this.state = {\n            username: '',\n            password: '',\n            submitted: false\n        }\n    }\n\n    handleChange = (event) => {\n        console.log('login handleChange');\n        const { name, value } = event.target;\n        this.setState({\n            [name]: value\n        })\n    }\n\n    handleSubmit = (event) => {\n        event.preventDefault();\n\n        this.setState({\n            submitted: true\n        }, this.sendToReduxStore);\n\n    }\n\n    sendToReduxStore = () => {\n        const { username, password } = this.state;\n\n        const reduxData = {\n            username: username,\n            password: password\n        }\n        console.log('reduxData',reduxData);\n\n        if (this.state.submitted) {\n            this.loginAcceptedOrDenied(reduxData);\n        }\n    }\n\n    loginAcceptedOrDenied = (data) => {\n        // check db for login data here\n        data.isLoggedIn = true;\n\n        this.props.dispatch({\n            type: 'USER_LOGIN_REQUEST',\n            payload: data\n        });\n        this.setState({\n            submitted: false\n        });\n    }\n\n    render() {\n        return (\n            <div>\n                <Styles.Wrapper>\n                    <Card>\n                        <form>\n                            <label for=\"male\">Username: </label>\n                            <Input\n                                type=\"text\"\n                                name=\"username\"\n                                value={this.state.username}\n                                onChange={event => this.handleChange(event)}\n                            />\n                            <br></br>\n                            <Input\n                                type=\"text\"\n                                name=\"password\"\n                                value={this.state.password}\n                                onChange={event => this.handleChange(event)}\n                            />\n                            <br></br>\n                            <button onClick={this.handleSubmit}>submit</button>\n                        </form>\n                    </Card>\n                    <p>State user: {this.state.username}</p>\n                    <p>State pw: {this.state.password}</p>\n                    <p>Global props user: {this.props.username}</p>\n                    <p>Global props pw: {this.props.password}</p>\n                </Styles.Wrapper>\n            </div>\n        )\n    }\n}\n\nfunction mapStateToProps(state) {\n    console.log('Login: mapStateToProps state',state);\n    return {\n      username: state.username,\n      password: state.password,\n      isLoggedIn: true\n    };\n}\n\nexport default connect(mapStateToProps)(Login);"]},"metadata":{},"sourceType":"module"}