{"map":"{\"version\":3,\"sources\":[\"/Users/nicklascschmidt/Code/Nicky/threadauction/client/src/pages/login/login.js\",\"/Users/nicklascschmidt/Code/Nicky/threadauction/client/src/pages/home/home.js\",\"/Users/nicklascschmidt/Code/Nicky/threadauction/client/src/pages/productSwitch.js\",\"/Users/nicklascschmidt/Code/Nicky/threadauction/client/src/App.js\",\"/Users/nicklascschmidt/Code/Nicky/threadauction/client/src/serviceWorker.js\",\"/Users/nicklascschmidt/Code/Nicky/threadauction/client/src/index.js\"],\"names\":[\"Login\",\"props\",\"_this\",\"Object\",\"classCallCheck\",\"this\",\"possibleConstructorReturn\",\"getPrototypeOf\",\"call\",\"handleChange\",\"event\",\"console\",\"log\",\"_event$target\",\"target\",\"name\",\"value\",\"setState\",\"defineProperty\",\"handleSubmit\",\"preventDefault\",\"submitted\",\"sendToReduxStore\",\"_this$state\",\"state\",\"reduxData\",\"username\",\"password\",\"loginAcceptedOrDenied\",\"data\",\"isLoggedIn\",\"dispatch\",\"type\",\"payload\",\"_this2\",\"react_default\",\"a\",\"createElement\",\"onChange\",\"onClick\",\"React\",\"Component\",\"connect\",\"Home\",\"login\",\"ProductSwitch\",\"initialState\",\"store\",\"createStore\",\"arguments\",\"length\",\"undefined\",\"action\",\"App\",\"es\",\"BrowserRouter\",\"Switch\",\"Route\",\"exact\",\"path\",\"component\",\"Boolean\",\"window\",\"location\",\"hostname\",\"match\",\"ReactDOM\",\"render\",\"src_App\",\"document\",\"getElementById\",\"navigator\",\"serviceWorker\",\"ready\",\"then\",\"registration\",\"unregister\"],\"mappings\":\"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\",\"sourcesContent\":[\"import React from 'react';\\nimport { connect } from 'react-redux';\\n\\n\\nclass Login extends React.Component {\\n    constructor(props) {\\n        super(props)\\n\\n        this.state = {\\n            username: '',\\n            password: '',\\n            submitted: false\\n        }\\n    }\\n\\n    handleChange = (event) => {\\n        console.log('login handleChange');\\n        const { name, value } = event.target;\\n        this.setState({\\n            [name]: value\\n        })\\n    }\\n\\n    handleSubmit = (event) => {\\n        event.preventDefault();\\n\\n        this.setState({\\n            submitted: true\\n        }, this.sendToReduxStore);\\n\\n    }\\n\\n    sendToReduxStore = () => {\\n        const { username, password } = this.state;\\n\\n        const reduxData = {\\n            username: username,\\n            password: password\\n        }\\n        console.log('reduxData',reduxData);\\n\\n        if (this.state.submitted) {\\n            this.loginAcceptedOrDenied(reduxData);\\n        }\\n    }\\n\\n    loginAcceptedOrDenied = (data) => {\\n        // check db for login data here\\n        data.isLoggedIn = true;\\n\\n        this.props.dispatch({\\n            type: 'USER_LOGIN_REQUEST',\\n            payload: data\\n        });\\n        this.setState({\\n            submitted: false\\n        });\\n    }\\n\\n    render() {\\n        return (\\n            <div>\\n                <form>\\n                    <input\\n                        type=\\\"text\\\"\\n                        name=\\\"username\\\"\\n                        value={this.state.username}\\n                        onChange={event => this.handleChange(event)}\\n                    />\\n                    <input\\n                        type=\\\"text\\\"\\n                        name=\\\"password\\\"\\n                        value={this.state.password}\\n                        onChange={event => this.handleChange(event)}\\n                    />\\n                    <button onClick={this.handleSubmit}>submit</button>\\n                </form>\\n                <p>State user: {this.state.username}</p>\\n                <p>State pw: {this.state.password}</p>\\n                <p>Global props user: {this.props.username}</p>\\n                <p>Global props pw: {this.props.password}</p>\\n            </div>\\n        )\\n    }\\n}\\n\\nfunction mapStateToProps(state) {\\n    console.log('Login: mapStateToProps state',state);\\n    return {\\n      username: state.username,\\n      password: state.password,\\n      isLoggedIn: true\\n    };\\n}\\n\\nexport default connect(mapStateToProps)(Login);\",\"import React, { Component } from \\\"react\\\";\\nimport Login from '../login/login';\\n\\nclass Home extends Component {\\n    render() {\\n        return (\\n            <div>\\n                <Login />\\n            </div>\\n        )\\n    }\\n}\\n\\nexport default Home;\",\"import React from 'react';\\nimport { connect } from 'react-redux';\\n\\nclass ProductSwitch extends React.Component {\\n    render() {\\n        return (\\n            <div>\\n                <div>sup I'm a different component</div>\\n                <div>{this.props.username}</div>\\n            </div>\\n        )\\n    }\\n}\\n\\nfunction mapStateToProps(state) {\\n    console.log('Product: mapStateToProps state',state);\\n    return {\\n      username: state.username,\\n      password: state.password,\\n      isLoggedIn: true\\n    };\\n}\\n\\nexport default connect(mapStateToProps)(ProductSwitch);\",\"import React, { Component } from 'react';\\nimport { BrowserRouter as Router, Route, Switch } from \\\"react-router-dom\\\";\\n// redux\\nimport { Provider } from 'react-redux';\\nimport { createStore } from 'redux';\\n\\n// pages\\nimport Home from \\\"./pages/home/home\\\";\\nimport Login from './pages/login/login';\\n// test\\nimport ProductSwitch from './pages/productSwitch';\\n\\n\\nconst initialState = {\\n  username: '',\\n  password: '',\\n  isLoggedIn: false\\n}\\n\\nconst reducer = (state = initialState, action) => {\\n  console.log('action',action);\\n  console.log('state',state);\\n  switch(action.type) {\\n    case 'USER_LOGIN_REQUEST':\\n      console.log('global state updated');\\n      return {\\n        username: action.payload.username,\\n        password: action.payload.password,\\n        isLoggedIn: action.payload.isLoggedIn\\n      }\\n    default:\\n      return state;\\n  }\\n}\\n\\nconst store = createStore(reducer);\\n\\n// class App extends Component {\\n//   render() {\\n//     return (\\n//       <Provider store={store}>\\n//         <div className=\\\"App\\\">\\n//           <h1>Login here:</h1>\\n//           <Login />\\n//           <Product />\\n          \\n//         </div>\\n//       </Provider>\\n//     );\\n//   }\\n// }\\n\\nconst App = () => (\\n  <Provider store={store}>\\n    <Router>\\n      <div>\\n        <Switch>\\n          <Route exact path=\\\"/\\\" component={Home} />\\n          <Route exact path=\\\"/product\\\" component={ProductSwitch} />\\n          {/* <Route exact path=\\\"/books\\\" component={Books} />\\n          <Route exact path=\\\"/books/:id\\\" component={Detail} />\\n          <Route component={NoMatch} /> */}\\n        </Switch>\\n      </div>\\n    </Router>\\n  </Provider>\\n);\\n\\nexport default App;\\n\",\"// This optional code is used to register a service worker.\\n// register() is not called by default.\\n\\n// This lets the app load faster on subsequent visits in production, and gives\\n// it offline capabilities. However, it also means that developers (and users)\\n// will only see deployed updates on subsequent visits to a page, after all the\\n// existing tabs open on the page have been closed, since previously cached\\n// resources are updated in the background.\\n\\n// To learn more about the benefits of this model and instructions on how to\\n// opt-in, read http://bit.ly/CRA-PWA.\\n\\nconst isLocalhost = Boolean(\\n  window.location.hostname === 'localhost' ||\\n    // [::1] is the IPv6 localhost address.\\n    window.location.hostname === '[::1]' ||\\n    // 127.0.0.1/8 is considered localhost for IPv4.\\n    window.location.hostname.match(\\n      /^127(?:\\\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\\n    )\\n);\\n\\nexport function register(config) {\\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\\n    // The URL constructor is available in all browsers that support SW.\\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\\n    if (publicUrl.origin !== window.location.origin) {\\n      // Our service worker won't work if PUBLIC_URL is on a different origin\\n      // from what our page is served on. This might happen if a CDN is used to\\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\\n      return;\\n    }\\n\\n    window.addEventListener('load', () => {\\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\\n\\n      if (isLocalhost) {\\n        // This is running on localhost. Let's check if a service worker still exists or not.\\n        checkValidServiceWorker(swUrl, config);\\n\\n        // Add some additional logging to localhost, pointing developers to the\\n        // service worker/PWA documentation.\\n        navigator.serviceWorker.ready.then(() => {\\n          console.log(\\n            'This web app is being served cache-first by a service ' +\\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\\n          );\\n        });\\n      } else {\\n        // Is not localhost. Just register service worker\\n        registerValidSW(swUrl, config);\\n      }\\n    });\\n  }\\n}\\n\\nfunction registerValidSW(swUrl, config) {\\n  navigator.serviceWorker\\n    .register(swUrl)\\n    .then(registration => {\\n      registration.onupdatefound = () => {\\n        const installingWorker = registration.installing;\\n        installingWorker.onstatechange = () => {\\n          if (installingWorker.state === 'installed') {\\n            if (navigator.serviceWorker.controller) {\\n              // At this point, the updated precached content has been fetched,\\n              // but the previous service worker will still serve the older\\n              // content until all client tabs are closed.\\n              console.log(\\n                'New content is available and will be used when all ' +\\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\\n              );\\n\\n              // Execute callback\\n              if (config && config.onUpdate) {\\n                config.onUpdate(registration);\\n              }\\n            } else {\\n              // At this point, everything has been precached.\\n              // It's the perfect time to display a\\n              // \\\"Content is cached for offline use.\\\" message.\\n              console.log('Content is cached for offline use.');\\n\\n              // Execute callback\\n              if (config && config.onSuccess) {\\n                config.onSuccess(registration);\\n              }\\n            }\\n          }\\n        };\\n      };\\n    })\\n    .catch(error => {\\n      console.error('Error during service worker registration:', error);\\n    });\\n}\\n\\nfunction checkValidServiceWorker(swUrl, config) {\\n  // Check if the service worker can be found. If it can't reload the page.\\n  fetch(swUrl)\\n    .then(response => {\\n      // Ensure service worker exists, and that we really are getting a JS file.\\n      if (\\n        response.status === 404 ||\\n        response.headers.get('content-type').indexOf('javascript') === -1\\n      ) {\\n        // No service worker found. Probably a different app. Reload the page.\\n        navigator.serviceWorker.ready.then(registration => {\\n          registration.unregister().then(() => {\\n            window.location.reload();\\n          });\\n        });\\n      } else {\\n        // Service worker found. Proceed as normal.\\n        registerValidSW(swUrl, config);\\n      }\\n    })\\n    .catch(() => {\\n      console.log(\\n        'No internet connection found. App is running in offline mode.'\\n      );\\n    });\\n}\\n\\nexport function unregister() {\\n  if ('serviceWorker' in navigator) {\\n    navigator.serviceWorker.ready.then(registration => {\\n      registration.unregister();\\n    });\\n  }\\n}\\n\",\"import React from 'react';\\nimport ReactDOM from 'react-dom';\\nimport App from './App';\\nimport * as serviceWorker from './serviceWorker';\\n\\nReactDOM.render(<App />, document.getElementById('root'));\\n\\n// If you want your app to work offline and load faster, you can change\\n// unregister() to register() below. Note this comes with some pitfalls.\\n// Learn more about service workers: http://bit.ly/CRA-PWA\\nserviceWorker.unregister();\\n\"]}","code":"(window.webpackJsonp=window.webpackJsonp||[]).push([[0],{22:function(e,t,n){e.exports=n(31)},31:function(e,t,n){\"use strict\";n.r(t);var a=n(0),o=n.n(a),r=n(16),s=n.n(r),l=n(33),u=n(35),c=n(34),i=n(8),p=n(11),d=n(5),m=n(6),h=n(9),g=n(7),b=n(10),w=n(20),E=function(e){function t(e){var n;return Object(d.a)(this,t),(n=Object(h.a)(this,Object(g.a)(t).call(this,e))).handleChange=function(e){console.log(\"login handleChange\");var t=e.target,a=t.name,o=t.value;n.setState(Object(w.a)({},a,o))},n.handleSubmit=function(e){e.preventDefault(),n.setState({submitted:!0},n.sendToReduxStore)},n.sendToReduxStore=function(){var e=n.state,t={username:e.username,password:e.password};console.log(\"reduxData\",t),n.state.submitted&&n.loginAcceptedOrDenied(t)},n.loginAcceptedOrDenied=function(e){e.isLoggedIn=!0,n.props.dispatch({type:\"USER_LOGIN_REQUEST\",payload:e}),n.setState({submitted:!1})},n.state={username:\"\",password:\"\",submitted:!1},n}return Object(b.a)(t,e),Object(m.a)(t,[{key:\"render\",value:function(){var e=this;return o.a.createElement(\"div\",null,o.a.createElement(\"form\",null,o.a.createElement(\"input\",{type:\"text\",name:\"username\",value:this.state.username,onChange:function(t){return e.handleChange(t)}}),o.a.createElement(\"input\",{type:\"text\",name:\"password\",value:this.state.password,onChange:function(t){return e.handleChange(t)}}),o.a.createElement(\"button\",{onClick:this.handleSubmit},\"submit\")),o.a.createElement(\"p\",null,\"State user: \",this.state.username),o.a.createElement(\"p\",null,\"State pw: \",this.state.password),o.a.createElement(\"p\",null,\"Global props user: \",this.props.username),o.a.createElement(\"p\",null,\"Global props pw: \",this.props.password))}}]),t}(o.a.Component);var f=Object(i.b)(function(e){return console.log(\"Login: mapStateToProps state\",e),{username:e.username,password:e.password,isLoggedIn:!0}})(E),v=function(e){function t(){return Object(d.a)(this,t),Object(h.a)(this,Object(g.a)(t).apply(this,arguments))}return Object(b.a)(t,e),Object(m.a)(t,[{key:\"render\",value:function(){return o.a.createElement(\"div\",null,o.a.createElement(f,null))}}]),t}(a.Component),O=function(e){function t(){return Object(d.a)(this,t),Object(h.a)(this,Object(g.a)(t).apply(this,arguments))}return Object(b.a)(t,e),Object(m.a)(t,[{key:\"render\",value:function(){return o.a.createElement(\"div\",null,o.a.createElement(\"div\",null,\"sup I'm a different component\"),o.a.createElement(\"div\",null,this.props.username))}}]),t}(o.a.Component);var j=Object(i.b)(function(e){return console.log(\"Product: mapStateToProps state\",e),{username:e.username,password:e.password,isLoggedIn:!0}})(O),y={username:\"\",password:\"\",isLoggedIn:!1},S=Object(p.b)(function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:y,t=arguments.length>1?arguments[1]:void 0;switch(console.log(\"action\",t),console.log(\"state\",e),t.type){case\"USER_LOGIN_REQUEST\":return console.log(\"global state updated\"),{username:t.payload.username,password:t.payload.password,isLoggedIn:t.payload.isLoggedIn};default:return e}}),C=function(){return o.a.createElement(i.a,{store:S},o.a.createElement(l.a,null,o.a.createElement(\"div\",null,o.a.createElement(u.a,null,o.a.createElement(c.a,{exact:!0,path:\"/\",component:v}),o.a.createElement(c.a,{exact:!0,path:\"/product\",component:j})))))};Boolean(\"localhost\"===window.location.hostname||\"[::1]\"===window.location.hostname||window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/));s.a.render(o.a.createElement(C,null),document.getElementById(\"root\")),\"serviceWorker\"in navigator&&navigator.serviceWorker.ready.then(function(e){e.unregister()})}},[[22,2,1]]]);","extractedComments":[]}